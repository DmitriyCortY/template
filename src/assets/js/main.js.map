{"version":3,"sources":["_scene-scroll-control.js","_scroll-to-block.js","_tracking-postition.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClfile":"main.js","sourcesContent":["/*\r\n\r\nnew SceneScrollControl({\r\n    scene: 'body',\r\n    tracking: 'body'\r\n})\r\n\r\n*/\r\n\r\nclass SceneScrollControl {\r\n    constructor(config) {\r\n\r\n        this.scene      = $(config.scene)\r\n        this.tracking   = $(config.tracking)\r\n        this.saveState  = null\r\n        this.flag       = false\r\n\r\n        this.callHandler()\r\n    }\r\n\r\n    callHandler() {\r\n\r\n        this.tracking.on('sceneScrollOff', () => {\r\n            this.scrollSceneOff()\r\n        })\r\n\r\n        this.tracking.on('sceneScrollOn', () => {\r\n            this.scrollSceneOn()\r\n        })\r\n    }\r\n\r\n    scrollSceneOff() {\r\n\r\n        if (!this.flag) {\r\n\r\n            this.flag = !this.flag\r\n            this.saveState = this.scene.css('overflow-y')\r\n            this.scene.css('overflow-y', 'hidden')\r\n        }\r\n    }\r\n\r\n    scrollSceneOn() {\r\n\r\n        if (this.flag) {\r\n\r\n            this.flag = !this.flag\r\n            this.scene.css('overflow-y', this.saveState)\r\n            this.saveState = null\r\n        }\r\n    }\r\n}","/*\r\n\r\nnew ScrollToBlock({\r\n    trigger: '[data-scroll-to-block-trigger]',\r\n    anchor: '[data-scroll-to-block-anchor]',\r\n    offset: $(window).height() / 2\r\n})\r\n\r\n*/\r\nclass ScrollToBlock{\r\n\tconstructor(config){\r\n\r\n\t\tthis.trigger \t= $(config.trigger)\r\n\t\tthis.anchor \t= $(config.anchor)\r\n\t\tthis.offset \t= config.offset || 0\r\n\t\tthis.speed \t\t= config.speed || 600\r\n\t\tthis.place \t\t= $('html')\r\n\r\n\t\tthis.callHandler()\r\n\t}\r\n\r\n\tcallHandler() {\r\n\r\n\t\tthis.trigger.on('click', () => {\r\n\r\n\t\t\tevent.preventDefault()\r\n\t\t\tthis.scroll()\r\n\t\t})\r\n\t}\r\n\r\n\tscroll() {\r\n\r\n\t\tthis.place.animate({\r\n\r\n\t\t\tscrollTop: this.calcPosition(this)\r\n\t\t}, this.speed)\r\n\t}\r\n\r\n\tcalcPosition() {\r\n\r\n\t\tlet anchorOffsetTop = this.anchor.eq(0).offset().top\r\n\t\tlet calc\t\t\t= anchorOffsetTop - this.offset\t\t\r\n\t\treturn calc\r\n\t}\r\n}","/*   \r\n\r\nnew ItemTracking({\r\n    trigger: '[data-tracking-postition-trigger]',\r\n    offset: $(window).height() * 0.2,\r\n    eventName: 'testEvent',\r\n    callBack: function () {\r\n        console.log('callBack')\r\n    }\r\n})\r\n\r\n*/\r\n\r\nclass ItemTracking{\r\n    constructor(config) {\r\n\r\n        this.trigger = $(config.trigger)\r\n        this.callBack = config.callBack\r\n        this.offset = parseInt(config.offset, 10) || 0\r\n        this.place =  $(document)\r\n\t\tthis.eventName = config.eventName || 'tracking-position-event'\r\n        this.eventPlace = $('body')\r\n\r\n        this.window = $(window)\r\n        this.flagEvent = false\r\n\r\n        this.handlerScroll()\r\n    }\r\n\r\n    visibilityAction() {\r\n\r\n        this.callBack()\r\n        this.customEvent()\r\n    }\r\n\r\n    customEvent() {\r\n\r\n        if (this.eventName && !this.flagEvent) {\r\n\r\n            this.flagEvent = !this.flagEvent\r\n            this.eventPlace.trigger(this.eventName)\r\n        }\r\n    }\r\n\r\n    handlerScroll() {\r\n        \r\n        this.place.on('scroll', () => {\r\n            \r\n            if (this.calcPosition() <= 0) {\r\n\r\n                this.visibilityAction() \r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    calcPosition() {\r\n\r\n        let calc = this.trigger.eq(0).offset().top - this.place.scrollTop() - this.window.height() + this.offset\r\n        return Math.round(calc)\r\n    }\r\n}\r\n"]}